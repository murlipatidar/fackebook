c
 Post.joins(:comments).where('comments.Comment LIKE ?', "%#{search}%" )
 Post.joins(:comments).where('comment.Comments LIKE ?', "%#{search}%" )
 Post.joins(:comments).where('comments.Comments LIKE ?', "%#{search}%" )
 Post.joins(:comments).where('comments.Comment LIKE ?', "%#{search}%" )
 Post.joins(:comments)
 Post.includes(:comments).where('comments.Comment LIKE ?', "%#{search}%" )
 Post.includes(:comments).where('comments.Comments LIKE ?', "%#{search}%" )
 Post.includes(:comments).where('comment.Comments LIKE ?', "%#{search}%" )
 Post.includes(:comments)
 Post.includes(:comment)
 Post.includes(:comments)
Post.where("name LIKE ?", "%#{search}%")
c
Post.includes(comments: :comment)
Post.includes(comment: :comment)
Post.includes(comment: :comments)
c
 @tags_result
c
 @tags_result
n
eager_load
 route_sets.each(&:eager_load!)
n
exception
n
@tags_result
 @posts = Post.search(params[:search])
@posts = Post.search(params[:search])
Post.search(params[:search])
continue
n
params[:search]
c
n
current
n
response
n
Post.search(params[:search],fields: ["name", "image"])
Post.search(params[:search]
params[:search]
c
@posts = Post.search(params[:search])
params[:search]
c
@posts = Post.search(params[:search][2])
@posts = Post.search(params[:search]])
@posts = Post.search(params[:search])
Post.search(params[:search][0@posts = Post.search(params[:search])])
Post.search(params[:search])
params[:search]
n
@posts = Post.search(params[:search])
params[:search]
c
@posts = post.search(params[:search])
post = Post.reindex
params[:search]
params
n
params
n
self.search(query)
c
query
self.search(query)
c
n
params
n
self.search(query)
c
n
params
n
self.search(query)
c
n
params
n
c
params
n
query
self.search(query)
c
n
self.search(query)
query
n
settings index: { number_of_shards: 1 }
index
number_of_shards
c
self.search(search)
self.search(search[])
self.search(search)
self.search(query)
query
c
self.search(search)
self.search(query)
c
